generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ChatMessage {
  id          String   @id
  userId      String
  isFromAdmin Boolean  @default(false)
  content     String
  createdAt   DateTime @default(now())
  User        User     @relation(fields: [userId], references: [id])
}

model Ingredient {
  id                String              @id
  name              String
  unit              String
  createdAt         DateTime            @default(now())
  ProductIngredient ProductIngredient[]
  StockItem         StockItem[]
}

model Order {
  id        String      @id
  userId    String
  status    String      @default("pending")
  total     Decimal     @db.Decimal(10, 2)
  address   String
  phone     String
  comment   String?
  createdAt DateTime    @default(now())
  User      User        @relation(fields: [userId], references: [id])
  OrderItem OrderItem[]
}

model OrderItem {
  id        String  @id
  orderId   String
  productId String
  quantity  Int     @default(1)
  price     Decimal @db.Decimal(10, 2)
  Order     Order   @relation(fields: [orderId], references: [id])
  Product   Product @relation(fields: [productId], references: [id])
}

model Product {
  id                String              @id
  name              String
  description       String?
  price             Decimal             @db.Decimal(10, 2)
  imageUrl          String?
  weight            String?
  category          String
  createdAt         DateTime            @default(now())
  OrderItem         OrderItem[]
  ProductIngredient ProductIngredient[]
  TechCard          TechCard?
}

model ProductIngredient {
  productId    String
  ingredientId String
  amount       Float
  unit         String
  Ingredient   Ingredient @relation(fields: [ingredientId], references: [id])
  Product      Product    @relation(fields: [productId], references: [id])

  @@id([productId, ingredientId])
}

model StockItem {
  id              String     @id
  ingredientId    String
  quantity        Float
  updatedAt       DateTime
  bruttoWeight    Float?
  expiryDays      Int?
  nettoWeight     Float?
  wastePercentage Float?
  supplier        String?
  category        String?
  Ingredient      Ingredient @relation(fields: [ingredientId], references: [id])
}

model TechCard {
  id        String  @id
  productId String  @unique
  steps     Json?
  imageUrl  String?
  Product   Product @relation(fields: [productId], references: [id])
}

model User {
  id          String        @id
  email       String        @unique
  name        String?
  password    String?
  role        Role          @default(user)
  createdAt   DateTime      @default(now())
  ChatMessage ChatMessage[]
  Order       Order[]
}

enum Role {
  user
  admin
}
