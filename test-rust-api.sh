#!/bin/bash

# üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Rust Backend API
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: chmod +x test-rust-api.sh && ./test-rust-api.sh

API_URL="http://127.0.0.1:8000/api/v1"

echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FodiFood Rust Backend API"
echo "========================================="
echo ""

# 1. Health Check
echo "1Ô∏è‚É£ Health Check"
echo "GET $API_URL/health"
curl -s "$API_URL/health" | jq '.' || echo "‚ùå Health check failed"
echo ""
echo ""

# 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
echo "2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–æ–≤"
echo "GET $API_URL/products"
curl -s "$API_URL/products" | jq '.' || echo "‚ùå Products fetch failed"
echo ""
echo ""

# 3. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo "3Ô∏è‚É£ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
echo "POST $API_URL/auth/register"
REGISTER_RESPONSE=$(curl -s -X POST "$API_URL/auth/register" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "test@fodifood.com",
    "password": "test123456",
    "name": "Test User"
  }')
echo "$REGISTER_RESPONSE" | jq '.' || echo "‚ùå Registration failed"
echo ""
echo ""

# 4. –í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo "4Ô∏è‚É£ –í—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
echo "POST $API_URL/auth/login"
LOGIN_RESPONSE=$(curl -s -X POST "$API_URL/auth/login" \
  -H "Content-Type: application/json" \
  -d '{
    "email": "test@fodifood.com",
    "password": "test123456"
  }')
echo "$LOGIN_RESPONSE" | jq '.'

# –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–∫–µ–Ω
TOKEN=$(echo "$LOGIN_RESPONSE" | jq -r '.token // empty')

if [ -z "$TOKEN" ]; then
  echo "‚ùå Login failed - no token received"
else
  echo "‚úÖ Token received: $TOKEN"
fi
echo ""
echo ""

# 5. –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è (—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π)
if [ ! -z "$TOKEN" ]; then
  echo "5Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
  echo "GET $API_URL/auth/me"
  curl -s "$API_URL/auth/me" \
    -H "Authorization: Bearer $TOKEN" | jq '.' || echo "‚ùå Profile fetch failed"
  echo ""
  echo ""
fi

# 6. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ (—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π)
if [ ! -z "$TOKEN" ]; then
  echo "6Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–∫–∞–∑–∞"
  echo "POST $API_URL/orders"
  curl -s -X POST "$API_URL/orders" \
    -H "Content-Type: application/json" \
    -H "Authorization: Bearer $TOKEN" \
    -d '{
      "name": "Test User",
      "phone": "+48123456789",
      "address": "Test Address 123",
      "comment": "Test order",
      "items": [
        {
          "productId": "1",
          "quantity": 2,
          "price": 25.99
        }
      ]
    }' | jq '.' || echo "‚ùå Order creation failed"
  echo ""
  echo ""
fi

# 7. –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ (—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π)
if [ ! -z "$TOKEN" ]; then
  echo "7Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤"
  echo "GET $API_URL/orders"
  curl -s "$API_URL/orders" \
    -H "Authorization: Bearer $TOKEN" | jq '.' || echo "‚ùå Orders fetch failed"
  echo ""
  echo ""
fi

echo "========================================="
echo "‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üí° –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ –æ—à–∏–±–∫–∏:"
echo "  1. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ Rust backend –∑–∞–ø—É—â–µ–Ω: cargo shuttle run"
echo "  2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ –ø–æ—Ä—Ç 8000 –¥–æ—Å—Ç—É–ø–µ–Ω"
echo "  3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ backend –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ"
