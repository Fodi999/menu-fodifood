import { useEffect } from 'react';
import { useRole as useRoleContext } from '@/contexts/RoleContext';
import { UserRole } from '@/types/user';

/**
 * Enhanced useRole hook with role change logging and utilities
 * Provides better UX feedback when switching between roles
 */
export function useRole() {
  const context = useRoleContext();

  // –ü—Ä–∏ —Å–º–µ–Ω–µ —Ä–æ–ª–∏ ‚Äî –ª–æ–≥–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ª—É—á—à–µ–≥–æ UX
  useEffect(() => {
    if (context.currentRole) {
      const roleEmoji = getRoleEmoji(context.currentRole);
      console.info(`${roleEmoji} Current role: ${context.currentRole}`);
    }
  }, [context.currentRole]);

  return context;
}

/**
 * –•–µ–ª–ø–µ—Ä –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è emoji –ø–æ —Ä–æ–ª–∏
 */
function getRoleEmoji(role: UserRole): string {
  const roleMap: Record<UserRole, string> = {
    [UserRole.USER]: 'üë§',
    [UserRole.BUSINESS_OWNER]: 'üíº',
    [UserRole.INVESTOR]: 'üí∞',
    [UserRole.ADMIN]: 'üëë',
  };
  return roleMap[role] || 'üé≠';
}

/**
 * –•–µ–ª–ø–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ –±–∏–∑–Ω–µ—Å–∞
 */
export function useIsBusinessMode() {
  const { currentRole } = useRole();
  return currentRole === UserRole.BUSINESS_OWNER;
}

/**
 * –•–µ–ª–ø–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –º–æ–∂–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç—å —Ä–æ–ª–∏
 */
export function useCanManageBusiness() {
  const { canSwitchRole } = useRole();
  return canSwitchRole;
}

/**
 * –•–µ–ª–ø–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
 */
export function useIsAdmin() {
  const { currentRole } = useRole();
  return currentRole === UserRole.ADMIN;
}

/**
 * –•–µ–ª–ø–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–±—ã—á–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
 */
export function useIsUser() {
  const { currentRole } = useRole();
  return currentRole === UserRole.USER;
}

/**
 * –•–µ–ª–ø–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–º
 */
export function useIsInvestor() {
  const { currentRole } = useRole();
  return currentRole === UserRole.INVESTOR;
}

/**
 * –•–µ–ª–ø–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ—Å—Ç—É–ø –∫ –±–∏–∑–Ω–µ—Å-—Ñ—É–Ω–∫—Ü–∏—è–º
 * (–≤–ª–∞–¥–µ–ª–µ—Ü –±–∏–∑–Ω–µ—Å–∞ –∏–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)
 */
export function useHasBusinessAccess() {
  const { currentRole } = useRole();
  return currentRole === UserRole.BUSINESS_OWNER || currentRole === UserRole.ADMIN;
}

/**
 * –•–µ–ª–ø–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–∞–≤–∞
 * (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä)
 */
export function useHasAdminAccess() {
  const { currentRole } = useRole();
  return currentRole === UserRole.ADMIN;
}
