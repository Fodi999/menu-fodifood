"use client";

import { signIn } from "next-auth/react";
import { useState } from "react";
import Link from "next/link";

export default function SignInPage() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [error, setError] = useState("");
  const [success, setSuccess] = useState("");
  const [loading, setLoading] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError("");
    setSuccess("");
    setLoading(true);

    try {
      console.log("üîê Attempting sign in...");
      
      const result = await signIn("credentials", {
        email,
        password,
        redirect: false,
      });

      console.log("üìä Sign in result:", result);

      if (result?.error) {
        console.error("‚ùå Sign in error:", result.error);
        setError("–ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å");
        setLoading(false);
        return;
      }

      if (result?.ok) {
        console.log("‚úÖ Sign in successful!");
        setSuccess("–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ! –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ...");
        
        // –ñ–¥—ë–º –Ω–µ–º–Ω–æ–≥–æ, —á—Ç–æ–±—ã —Å–µ—Å—Å–∏—è —Ç–æ—á–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∞—Å—å
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        // –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–∏
        const response = await fetch("/api/auth/session");
        const session = await response.json();
        
        console.log("üë§ Session after login:", session);
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫—É–¥–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏—Ç—å
        const redirectPath = session?.user?.role === "admin" ? "/admin" : "/profile";
        console.log(`üîÑ Redirecting to: ${redirectPath}`);
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º window.location –¥–ª—è –ø–æ–ª–Ω–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏
        window.location.href = redirectPath;
      }
    } catch (err) {
      console.error("üí• Unexpected error:", err);
      setError("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ");
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-900 flex items-center justify-center px-4">
      <div className="max-w-md w-full bg-gray-800 rounded-lg shadow-xl p-8">
        <h1 className="text-3xl font-bold text-center text-orange-500 mb-8">
          –í—Ö–æ–¥ –≤ FODI SUSHI
        </h1>

        <form onSubmit={handleSubmit} className="space-y-6">
          {error && (
            <div className="bg-red-500/10 border border-red-500 text-red-500 px-4 py-3 rounded">
              {error}
            </div>
          )}
          
          {success && (
            <div className="bg-green-500/10 border border-green-500 text-green-500 px-4 py-3 rounded">
              {success}
            </div>
          )}

          <div>
            <label className="block text-sm font-medium text-gray-300 mb-2">
              Email
            </label>
            <input
              type="email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              required
              className="w-full px-4 py-3 bg-gray-700 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500"
              placeholder="your@email.com"
            />
          </div>

          <div>
            <label className="block text-sm font-medium text-gray-300 mb-2">
              –ü–∞—Ä–æ–ª—å
            </label>
            <input
              type="password"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
              className="w-full px-4 py-3 bg-gray-700 text-white rounded-lg focus:outline-none focus:ring-2 focus:ring-orange-500"
              placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
            />
          </div>

          <button
            type="submit"
            disabled={loading}
            className="w-full py-3 bg-orange-500 text-white rounded-lg font-semibold hover:bg-orange-600 transition disabled:opacity-50 disabled:cursor-not-allowed"
          >
            {loading ? "–í—Ö–æ–¥..." : "–í–æ–π—Ç–∏"}
          </button>
        </form>

        <div className="mt-6 text-center">
          <p className="text-gray-400">
            –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?{" "}
            <Link
              href="/auth/signup"
              className="text-orange-500 hover:text-orange-400 font-medium"
            >
              –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
            </Link>
          </p>
        </div>

        <div className="mt-4 text-center">
          <Link
            href="/"
            className="text-sm text-gray-500 hover:text-gray-400"
          >
            ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </Link>
        </div>
      </div>
    </div>
  );
}
